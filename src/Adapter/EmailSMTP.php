<?phpnamespace LinkSoft\Email\Adapter;use LinkSoft\Email\Driver;use Swift_Mime_SimpleMessage;use Swift_SmtpTransport;/** * Class EmailSMTP * @package LinkSoft\Email */class EmailSMTP extends Driver{    /**     * Send the given Message.     *     * Recipient/sender data will be retrieved from the Message API.     * The return value is the number of recipients who were accepted for delivery.     *     * This is the responsibility of the send method to start the transport if needed.     *     * @param string[] $failedRecipients An array of failures by-reference     *     * @return int     */    public function send(Swift_Mime_SimpleMessage $message, &$failedRecipients = null)    {        // TODO: Implement send() method.        $this->beforeSendPerformed($message);        $count = $this->client->send($message, $failedRecipients);        $this->sendPerformed($message);        return $count;    }    public function client(): Swift_SmtpTransport    {        $transport = new Swift_SmtpTransport($this->options['host'], $this->options['port']);        if (!empty($options['encryption'])) {            $transport->setEncryption($this->options['encryption']);        }        // Once we have the transport we will check for the presence of a username        // and password. If we have it we will set the credentials on the Swift        // transporter instance so that we'll properly authenticate delivery.        if (isset($this->options['username'])) {            $transport->setUsername($this->options['username']);            $transport->setPassword($this->options['password']);        }        if (isset($this->options['stream'])) {            $transport->setStreamOptions($this->options['stream']);        }        if (isset($this->options['source_ip'])) {            $transport->setSourceIp($this->options['source_ip']);        }        if (isset($this->options['local_domain'])) {            $transport->setLocalDomain($this->options['local_domain']);        }        if (isset($this->options['timeout'])) {            $transport->setTimeout($this->options['timeout']);        }        if (isset($this->options['auth_mode'])) {            $transport->setAuthMode($this->options['auth_mode']);        }        return $transport;    }}